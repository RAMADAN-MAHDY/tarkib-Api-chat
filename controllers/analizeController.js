// import OpenAI from "openai";
import { GoogleGenAI } from "@google/genai";

import dotenv from "dotenv";
import UserRequest from "../models/UserRequest.js";

dotenv.config();

const ai = new GoogleGenAI({ apiKey: process.env.OPENAI_API_KEY });

const analizeController = async (req, res) => {

    const sessionId = req.sessionId;
    const userSession = await UserRequest.findOne({ sessionId });
    if (!userSession) {
        return res.status(400).json({ error: "ูุง ุชูุฌุฏ ูุญุงุฏุซุฉ ุจูุฐุง sessionId" });
    }

    const chatHistory = userSession.chatHistory || [];

    const formattedChat = chatHistory
        .map((m) => `${m.role === "user" ? "ุงูุนููู" : "ุงููุณุงุนุฏ"}: ${m.content}`)
        .join("\n");

    // โ ุงูุจุฑููุจุช ุงููุญุฏูุซ ุจุงูููุฌุฉ ุงูุณุนูุฏูุฉ ููููุน ุงูุชุซุจูุช
    const prompt = `
๐ ุงูุฑุฃ ุงููุญุงุฏุซุฉ ุงููู ุชุญุช ูุงุณุชุฎุฑุฌ ูููุง ุงููุนูููุงุช ุงูุชุงููุฉ ุฅุฐุง ูููุชูุง:

- ููุน ุงูุฎุฏูุฉ ุงููุทููุจุฉ
- ุงูุชุงุฑูุฎ  
- ุงูููุช
- ุงููููุน
- ุงุณู ุงูุนููู
- ุฑูู ุงูุฌูุงู

๐ ุฅุฐุง ูููุช **ููุท ุฑูู ุงูุฌูุงู** ุจุฏูู ุจุงูู ุงูุจูุงูุงุชุ ุฑุฌูุน ุฑุฏู ุจุตูุบุฉ JSON ูุฐุง (ููุซุงู):

ูุซุงู ููุท:
{
  "phone": "ููุง ุงูุฑูู"
}

๐ ูุฅุฐุง ูููุช **ูู ุงูุจูุงูุงุช**ุ ุฑุฌูุนูุง ุจุตูุบุฉ JSON ุจูุงูุดูู (ูุซุงู ุชูุถูุญู ููุท):

ูุซุงู ููุท:
{
  "service": "ุชูุธูู ุดูู",
  "date": "2025-07-20",  // (ุณุฌู ุงูุชุงุฑูุฎ ุฒู ูุงูููุฒุฑ ูุงุชุจู ุจุงูุธุจุท)
  "time": "3 ุงูุนุตุฑ",
  "location": "ุงูุฏูุงู - ุญู ุงูููุตููุฉ",
  "customer_name": "ูุญูุฏ ุงูุนุชูุจู",
  "phone": "0501234567"
}

๐ ุฅุฐุง ูุง ูููุช **ุฑูู ุงูุฌูุงู** ููุงุฆููุงุ ุฑุฌูุน ูุฐุง:

{ "agreement": false }

โ ููุงุญุธุฉ ูููุฉ ุฌุฏูุง:
โ ูุง ุชูุณุฎ ุงูุจูุงูุงุช ูู ุงูุฃูุซูุฉ.
โ ุงุณุชุฎุฑุฌ ุงูุจูุงูุงุช ุงูุญููููุฉ ูู ุงููุญุงุฏุซุฉ ููุณูุง ููุท.
โ ูุง ุชุดุฑุญุ ูุง ุชุนููุ ุฑุฌูุน ููุท JSON.

ุงููุญุงุฏุซุฉ:
===
${formattedChat}
===
`;

    try {
          // โจ ุงุณุชุฏุนุงุก Gemini
        const completion = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: prompt,
            generationConfig: {
                maxOutputTokens: 200
            }
        });

        const aiResponse = completion.text || "";
        const cleaned = aiResponse.replace(/```json|```/g, "");

        let parsed;
        try {
            parsed = JSON.parse(cleaned);
        } catch {
            return res.status(400).json({ error: "ุฑุฏ AI ุบูุฑ ุตุงูุญ", raw: aiResponse });
        }

        // โ ุญูุธ ุงูุจูุงูุงุช ูู ุงูุฌูุณุฉ ุฅุฐุง ูุง ุชู ุงูุงุชูุงู ูุจู ูุฐุง
        if (!userSession.agreement) {
            if (parsed.phone) {
                userSession.phone = parsed.phone;
                userSession.fullName = parsed.customer_name || "";
                userSession.service = parsed.service || "";
                userSession.date = parsed.date || "";
                userSession.time = parsed.time || "";
                userSession.location = parsed.location || "";
                userSession.agreement = true;
                await userSession.save();

                return res.json({
                    agreement: true,
                    saved: true,
                    data: parsed,
                    reply: "โ ุชู ุงูุงุชูุงูุ ูุฑุงุญ ูุชู ุงูุชูุงุตู ูุนู ูุฑูุจ ุฅู ุดุงุก ุงููู ๐"
                });
            } else {
                return res.json({ agreement: false });
            }
        }

        return res.json({ agreement: true, saved: true, data: parsed });
    } catch (error) {
        console.error("โ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงููุญุงุฏุซุฉ:", error);
        res.status(500).json({ error: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงููุญุงุฏุซุฉ" });
    }
}

export default analizeController ;